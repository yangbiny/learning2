package com.reason;

import co.elastic.clients.elasticsearch.ElasticsearchClient;
import co.elastic.clients.elasticsearch._types.FieldValue;
import co.elastic.clients.elasticsearch._types.SortOptions;
import co.elastic.clients.elasticsearch._types.SortOrder;
import co.elastic.clients.elasticsearch._types.query_dsl.Query;
import co.elastic.clients.elasticsearch.core.KnnSearchRequest;
import co.elastic.clients.elasticsearch.core.KnnSearchResponse;
import co.elastic.clients.elasticsearch.core.SearchRequest;
import co.elastic.clients.elasticsearch.core.SearchRequest.Builder;
import co.elastic.clients.elasticsearch.core.SearchResponse;
import co.elastic.clients.elasticsearch.core.SearchTemplateRequest;
import co.elastic.clients.elasticsearch.core.SearchTemplateResponse;
import co.elastic.clients.elasticsearch.core.knn_search.KnnSearchQuery;
import co.elastic.clients.elasticsearch.core.search.Hit;
import co.elastic.clients.elasticsearch.core.search.HitsMetadata;
import co.elastic.clients.json.JsonData;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.databind.PropertyNamingStrategies.SnakeCaseStrategy;
import com.fasterxml.jackson.databind.annotation.JsonNaming;
import com.fasterxml.jackson.databind.json.JsonMapper;
import com.reason.config.ElasticSearchConfig;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import lombok.Data;

/*

// 使用搜索模板进行查询
GET sch-atlas-fine-20231120/_search/template
{
  "id": "my_search_template",
  "params": {
    "words":"壁纸",
    "from":0,
    "size":10,
    "value":1000000000
  }
}

// 渲染搜索模板（不执行查询）
POST _render/template
{
  "id": "my_search_template",
  "params": {
    "words":"壁纸",
    "from":1,
    "size":1,
    "value":100000
  }
}

// 创建 搜索 模板
PUT _scripts/my_search_template
{
  "script": {
    "lang": "mustache",
    "source": {
      "query": {
        "script_score": {
          "script": {
            "source": "_score + doc['time_latest_fav_at'].value / {{value}}"
          },
          "query": {
            "bool": {
              "must": [
                {
                  "match": {
                    "msg": "{{words}}"
                  }
                }
              ]
            }
          }
        }
      },
      "from": "{{from}}",
      "size": "{{size}}"
    }
  }
}



 */


public class Main {

  private static final JsonMapper mapper = new JsonMapper();

  public static void main(String[] args) throws IOException {
    ElasticsearchClient client = ElasticSearchConfig.elasticsearchClient();
    searchWithVector(client);
    //searchWithSearchAfter(client);
    searchWithTemplate(client);
  }

  private static void searchWithVector(ElasticsearchClient client) throws IOException {
    List<Float> vectors = vectors();

    KnnSearchQuery knnSearchQuery = KnnSearchQuery.of(
        item -> item.field("clip_vl14_vector_768").queryVector(vectors)
            .k(10)
            .numCandidates(100)
    );
    KnnSearchResponse<ClipSearchData> response = client.knnSearch(item ->
            item.knn(knnSearchQuery)
                .index("sch-clip-atlas-fine-20231129"),
        ClipSearchData.class);
    System.out.println(response);
  }

  private static void searchWithSearchAfter(ElasticsearchClient client) throws IOException {

    SortOptions timeCreateAt = SortOptions.of(
        item -> item.field(f -> f.field("time_create_at")
            .order(SortOrder.Desc)
        )
    );
    SortOptions atlasId = SortOptions.of(
        item -> item.field(f -> f.field("atlas_id").order(SortOrder.Desc)));

    Query cntFav = Query.of(item -> item.term(t -> t.field("cnt_fav").value(0)));
    Query createQuery = Query.of(item -> item.range(
        r -> r.field("time_create_at").lt(JsonData.of(System.currentTimeMillis()))));

    String searchAfter = "[1317886800000,264290]";
    Object[] searchAfterObj = mapper.readValue(searchAfter, Object[].class);

    List<FieldValue> searchAfterValue = new ArrayList<>();
    for (Object o : searchAfterObj) {
      searchAfterValue.add(FieldValue.of(Long.parseLong(o.toString())));
    }

    SearchRequest build = new Builder()
        .query(q -> q.bool(bool -> bool.must(cntFav, createQuery)))
        .sort(timeCreateAt, atlasId)
        .size(10)
        .searchAfter(searchAfterValue)
        .build();
    SearchResponse<SearchData> search = client.search(build, SearchData.class);
    HitsMetadata<SearchData> hits = search.hits();
    String after = "";
    List<Hit<SearchData>> resultData = hits.hits();
    if (!resultData.isEmpty()) {
      Hit<SearchData> searchDataHit = resultData.get(resultData.size() - 1);
      List<FieldValue> sort = searchDataHit.sort();
      Object[] objects = new Object[sort.size()];
      for (int i = 0; i < sort.size(); i++) {
        objects[i] = sort.get(i)._get();
      }
      after = mapper.writeValueAsString(objects);
    }
    System.out.println(after);
    System.out.println(hits);
  }

  private static void searchWithTemplate(ElasticsearchClient client) throws IOException {
    var map = new HashMap<String, JsonData>();

    map.put("words", JsonData.of("好看的壁纸"));
    map.put("from", JsonData.of(0));
    map.put("size", JsonData.of(100));
    map.put("value", JsonData.of(10000));
    var searchMap = new HashMap<>();
    searchMap.put("first", 1310206301000L);
    searchMap.put("second", 70289);
    map.put("search_after_tpl", JsonData.of(searchMap));
    SearchTemplateRequest request = new SearchTemplateRequest.Builder()
        .index("sch-atlas-fine-20231120")
        .id("my_search_template")
        .params(map)
        .build();

    SearchTemplateResponse<SearchData> response = client.searchTemplate(
        request, SearchData.class);

    List<Hit<SearchData>> hits = response.hits().hits();
    List<SearchData> data = hits.stream().map(Hit::source).toList();
    Hit<SearchData> searchDataHit = hits.get(hits.size() - 1);
    List<FieldValue> sort = searchDataHit.sort();
    System.out.println(sort);
    System.out.println(data);
  }


  private static List<Float> vectors() {
    return List.of(0.000086426735,
        0.034820557,
        -0.011482239,
        0.0037326813,
        0.022903442,
        0.0017566681,
        0.037384033,
        -0.026901245,
        -0.01512146,
        -0.010986328,
        -0.0063438416,
        0.021591187,
        0.039215088,
        0.035949707,
        -0.005138397,
        0.010848999,
        -0.058410645,
        0.015419006,
        0.044708252,
        0.0040397644,
        -0.002248764,
        -0.0043945312,
        -0.00040555,
        0.0149002075,
        -0.015640259,
        -0.0037727356,
        -0.030014038,
        -0.018661499,
        0.0077323914,
        -0.01991272,
        -0.042907715,
        -0.00057697296,
        0.010269165,
        0.00023937225,
        -0.0016050339,
        -0.000039875507,
        -0.00060224533,
        -0.002325058,
        0.0047340393,
        0.010169983,
        0.031219482,
        0.018692017,
        0.0042762756,
        0.011123657,
        -0.011680603,
        -0.006614685,
        -0.01134491,
        0.026275635,
        0.0057640076,
        -0.013198853,
        0.012817383,
        -0.0029449463,
        0.009765625,
        0.012611389,
        -0.034057617,
        0.008918762,
        -0.016052246,
        -0.042266846,
        -0.022613525,
        -0.02619934,
        0.02885437,
        -0.009315491,
        0.0058631897,
        0.019882202,
        -0.000082850456,
        -0.0073242188,
        0.0023536682,
        0.00019395351,
        -0.0076560974,
        0.01386261,
        0.033111572,
        0.013061523,
        0.024505615,
        -0.0024871826,
        -0.010925293,
        0.014793396,
        -0.018188477,
        0.0013179779,
        -0.017745972,
        0.01209259,
        -0.016815186,
        0.014442444,
        -0.028808594,
        -0.013572693,
        -0.032684326,
        -0.022506714,
        -0.041748047,
        -0.018341064,
        -0.00012052059,
        0.024169922,
        0.0035591125,
        0.008354187,
        -0.027267456,
        0.012557983,
        0.023040771,
        -0.007598877,
        -0.042633057,
        -0.02432251,
        0.030075073,
        0.014762878,
        0.019699097,
        0.008613586,
        -0.04434204,
        -0.028427124,
        -0.0028858185,
        -0.018600464,
        -0.036376953,
        0.0063552856,
        -0.004524231,
        -0.0072250366,
        -0.0010261536,
        -0.0129470825,
        0.010177612,
        -0.007881165,
        -0.02407837,
        0.0010938644,
        0.0021190643,
        -0.01675415,
        0.018203735,
        0.019851685,
        -0.014274597,
        -0.011581421,
        -0.029388428,
        -0.012039185,
        -0.017181396,
        -0.011940002,
        0.020858765,
        0.016494751,
        0.00047802925,
        0.013717651,
        0.008293152,
        -0.19274902,
        -0.031951904,
        -0.010902405,
        0.005268097,
        0.010917664,
        -0.021759033,
        0.0027065277,
        0.0054740906,
        0.030151367,
        0.000998497,
        -0.011306763,
        -0.026947021,
        0.0057754517,
        -0.014297485,
        0.024871826,
        -0.037261963,
        -0.03930664,
        0.020401001,
        -0.017593384,
        0.010932922,
        0.025741577,
        0.03277588,
        0.008598328,
        0.012245178,
        0.0017910004,
        -0.0046081543,
        0.027694702,
        -0.01689148,
        -0.015274048,
        0.010421753,
        -0.025360107,
        0.045166016,
        -0.0065574646,
        -0.0345459,
        0.012634277,
        -0.015449524,
        0.014793396,
        0.017349243,
        -0.03665161,
        -0.020370483,
        -0.010696411,
        -0.005634308,
        -0.008934021,
        -0.014961243,
        -0.0026435852,
        0.0007929802,
        -0.08654785,
        -0.0067825317,
        0.011940002,
        -0.015060425,
        -0.010910034,
        -0.017959595,
        0.0023517609,
        -0.009513855,
        -0.0038032532,
        0.014381409,
        -0.034118652,
        0.0058403015,
        -0.012229919,
        0.021316528,
        -0.017593384,
        -0.042999268,
        0.013290405,
        -0.046173096,
        0.017288208,
        -0.0039482117,
        -0.0045700073,
        0.0035800934,
        -0.029403687,
        0.015220642,
        -0.053222656,
        0.041046143,
        0.0062026978,
        -0.02458191,
        -0.010360718,
        -0.0011434555,
        0.0044136047,
        -0.0077934265,
        -0.008598328,
        -0.0011882782,
        -0.00081157684,
        0.009391785,
        0.014541626,
        -0.01838684,
        0.01701355,
        0.023529053,
        -0.026382446,
        0.004184723,
        -0.037261963,
        -0.012802124,
        -0.014572144,
        0.01953125,
        0.0047836304,
        0.0046653748,
        -0.02029419,
        -0.023452759,
        0.01512146,
        0.011169434,
        -0.0064888,
        -0.007534027,
        0.0065841675,
        -0.031143188,
        -0.033966064,
        0.0058174133,
        -0.0070610046,
        -0.052978516,
        0.00019526482,
        -0.013145447,
        -0.01727295,
        -0.0000072717667,
        -0.0019626617,
        0.016036987,
        -0.010238647,
        -0.008071899,
        0.0151901245,
        -0.012001038,
        0.0074157715,
        -0.0022010803,
        -0.009239197,
        -0.015960693,
        -0.02217102,
        0.0119018555,
        -0.011489868,
        0.00484848,
        -0.039611816,
        0.011276245,
        -0.018569946,
        -0.0069007874,
        0.034698486,
        0.009529114,
        -0.0038700104,
        -0.028579712,
        -0.015457153,
        -0.0067977905,
        -0.011680603,
        0.012023926,
        0.010131836,
        0.011512756,
        0.013694763,
        -0.0090789795,
        -0.0014734268,
        -0.025253296,
        -0.013496399,
        0.018203735,
        0.028442383,
        -0.010009766,
        0.019577026,
        -0.007167816,
        0.0107421875,
        -0.006313324,
        0.005531311,
        -0.020477295,
        -0.0059890747,
        0.008354187,
        -0.03829956,
        0.00024557114,
        0.0011386871,
        0.009407043,
        -0.0038146973,
        -0.016311646,
        0.018112183,
        0.045837402,
        -0.035217285,
        0.00554657,
        0.0032024384,
        0.008049011,
        0.004386902,
        -0.001964569,
        0.04385376,
        -0.021865845,
        0.0032997131,
        0.0025997162,
        -0.032806396,
        -0.026260376,
        0.003446579,
        -0.020828247,
        0.039794922,
        -0.0057029724,
        0.011009216,
        0.01689148,
        -0.021194458,
        -0.030929565,
        -0.016189575,
        -0.015113831,
        -0.008811951,
        -0.09234619,
        -0.0026397705,
        0.019927979,
        0.009544373,
        -0.0017910004,
        -0.035888672,
        0.022613525,
        0.012168884,
        0.028564453,
        0.02229309,
        -0.021270752,
        -0.008132935,
        0.011390686,
        0.04449463,
        0.03100586,
        0.051330566,
        -0.0010461807,
        0.0053367615,
        0.013198853,
        -0.014717102,
        0.01586914,
        -0.0061416626,
        -0.013130188,
        0.014503479,
        0.004005432,
        -0.0019102097,
        0.007423401,
        0.013267517,
        -0.010475159,
        -0.007171631,
        -0.008255005,
        -0.028442383,
        -0.0023002625,
        0.012435913,
        0.0022621155,
        -0.020843506,
        -0.0077285767,
        0.016937256,
        -0.038360596,
        -0.007144928,
        0.0051078796,
        -0.020553589,
        0.00762558,
        0.0051574707,
        -0.0052223206,
        0.00050497055,
        0.018325806,
        0.024154663,
        0.016036987,
        0.013847351,
        -0.007347107,
        -0.016723633,
        0.027801514,
        0.003156662,
        0.042144775,
        0.0017490387,
        0.01247406,
        0.014770508,
        -0.018478394,
        -0.01953125,
        0.020309448,
        0.0001809597,
        0.0012731552,
        -0.007347107,
        0.022323608,
        -0.0003387928,
        0.00093078613,
        0.014549255,
        0.008804321,
        -0.04736328,
        0.0017528534,
        -0.009521484,
        -0.0014505386,
        0.021606445,
        0.003604889,
        0.02859497,
        0.020401001,
        0.02734375,
        0.03741455,
        -0.0055732727,
        0.012062073,
        -0.010353088,
        0.039764404,
        0.01537323,
        0.006641388,
        -0.02470398,
        -0.034210205,
        0.0043640137,
        -0.085754395,
        -0.0057640076,
        0.016189575,
        -0.011985779,
        0.025436401,
        0.009521484,
        -0.014572144,
        -0.013137817,
        0.0040740967,
        -0.52734375,
        -0.013725281,
        -0.017623901,
        0.032196045,
        0.029190063,
        0.0019931793,
        -0.0012769699,
        -0.021469116,
        0.015266418,
        0.035125732,
        0.014595032,
        -0.03744507,
        -0.04397583,
        -0.018157959,
        0.030181885,
        0.0054855347,
        -0.02897644,
        0.007205963,
        -0.013710022,
        -0.00024294853,
        -0.012199402,
        0.0021686554,
        0.020370483,
        -0.04598999,
        0.0061035156,
        0.026473999,
        0.030014038,
        0.08734131,
        0.02418518,
        0.0016946793,
        0.016586304,
        -0.011512756,
        0.0011262894,
        0.0068244934,
        0.019134521,
        -0.033599854,
        -0.0110321045,
        -0.026000977,
        0.0012559891,
        -0.0053977966,
        -0.010307312,
        -0.009208679,
        -0.017547607,
        -0.017944336,
        0.041992188,
        -0.01902771,
        0.007537842,
        0.01373291,
        -0.027801514,
        0.0037517548,
        0.21520996,
        -0.0049972534,
        -0.0052490234,
        -0.0053215027,
        -0.03414917,
        -0.027297974,
        0.013046265,
        -0.004016876,
        0.0028591156,
        0.019165039,
        0.0095825195,
        -0.00031852722,
        0.009162903,
        0.050994873,
        -0.020721436,
        0.03253174,
        -0.0034694672,
        0.008483887,
        -0.003955841,
        0.026351929,
        0.007209778,
        -0.010368347,
        -0.0072631836,
        0.015151978,
        0.009384155,
        -0.01940918,
        0.010017395,
        -0.019256592,
        -0.0043258667,
        -0.019760132,
        -0.03326416,
        0.004421234,
        -0.04272461,
        0.02331543,
        0.03074646,
        -0.001490593,
        0.004512787,
        0.033447266,
        -0.0031528473,
        0.0007119179,
        -0.010215759,
        -0.014022827,
        -0.03010559,
        0.012504578,
        0.00030755997,
        0.007411957,
        0.010246277,
        0.00919342,
        -0.028274536,
        0.021316528,
        -0.020370483,
        -0.025726318,
        0.018829346,
        -0.0079422,
        -0.025421143,
        -0.025177002,
        -0.016067505,
        0.008049011,
        -0.015701294,
        0.004383087,
        -0.0043182373,
        -0.015510559,
        0.023147583,
        -0.0020160675,
        0.030532837,
        -0.04458618,
        0.0011520386,
        0.02067566,
        0.004497528,
        0.00233078,
        -0.0234375,
        -0.025680542,
        -0.017440796,
        -0.018814087,
        0.032287598,
        -0.0044288635,
        0.01386261,
        -0.007171631,
        -0.030960083,
        0.047943115,
        -0.0076293945,
        0.012763977,
        -0.019699097,
        0.021759033,
        0.006187439,
        0.027862549,
        -0.03390503,
        -0.0054092407,
        0.024627686,
        0.03250122,
        0.015853882,
        0.026504517,
        -0.011047363,
        -0.030227661,
        -0.00089502335,
        0.025741577,
        -0.029571533,
        0.024520874,
        -0.0064964294,
        -0.0034999847,
        -0.006122589,
        -0.028549194,
        -0.010169983,
        -0.010055542,
        -0.011955261,
        -0.017669678,
        0.014602661,
        0.045806885,
        -0.0011796951,
        0.025054932,
        -0.040283203,
        0.021865845,
        0.014945984,
        0.03387451,
        -0.011253357,
        -0.015090942,
        0.012313843,
        0.025970459,
        0.015098572,
        0.028289795,
        -0.00024580956,
        0.00019919872,
        -0.010749817,
        0.022369385,
        -0.022613525,
        0.011833191,
        0.00440979,
        -0.009132385,
        -0.012779236,
        -0.023117065,
        -0.0026607513,
        0.02319336,
        0.025390625,
        -0.019973755,
        -0.018875122,
        -0.012840271,
        -0.009681702,
        0.003566742,
        -0.027130127,
        0.006641388,
        0.00010454655,
        0.0050621033,
        -0.025802612,
        0.013267517,
        -0.003206253,
        -0.00019621849,
        -0.016418457,
        -0.010787964,
        0.0049324036,
        -0.015808105,
        -0.016601562,
        0.021652222,
        -0.018081665,
        0.009262085,
        -0.018753052,
        -0.0059928894,
        -0.0033073425,
        0.013549805,
        0.018600464,
        0.021728516,
        -0.018936157,
        -0.02810669,
        0.08728027,
        -0.03515625,
        -0.03488159,
        -0.0158844,
        -0.017044067,
        -0.03829956,
        0.009971619,
        -0.038391113,
        0.019241333,
        -0.005886078,
        -0.010475159,
        0.011497498,
        -0.01423645,
        0.048980713,
        0.03741455,
        -0.026016235,
        0.01889038,
        0.014289856,
        0.009346008,
        0.5595703,
        0.0013189316,
        -0.009086609,
        0.0023555756,
        0.027832031,
        -0.014015198,
        0.00233078,
        -0.0006990433,
        -0.007663727,
        -0.00087976456,
        -0.008323669,
        -0.0019388199,
        0.027511597,
        0.024017334,
        0.0010967255,
        0.06100464,
        -0.005680084,
        -0.019927979,
        0.006641388,
        0.022857666,
        0.008125305,
        -0.031951904,
        0.0046424866,
        -0.016448975,
        0.019821167,
        0.022705078,
        -0.02079773,
        -0.022735596,
        0.0044784546,
        0.0038890839,
        0.022720337,
        0.002073288,
        0.016204834,
        -0.0132369995,
        0.011070251,
        -0.021514893,
        0.012702942,
        -0.030776978,
        0.0016813278,
        -0.01675415,
        -0.014266968,
        -0.0046577454,
        0.020309448,
        0.017410278,
        0.001200676,
        0.022247314,
        0.011291504,
        0.02696228,
        -0.00055360794,
        -0.041168213,
        0.02053833,
        -0.008895874,
        -0.006717682,
        -0.002614975,
        -0.007381439,
        0.0035419464,
        0.032287598,
        0.014038086,
        0.009475708,
        -0.01637268,
        -0.006225586,
        0.01902771,
        0.0039482117,
        0.017700195,
        -0.008552551,
        -0.03656006,
        0.013046265,
        0.0034942627,
        0.0064048767,
        0.027359009,
        0.011985779,
        -0.020004272,
        -0.014625549,
        -0.020370483,
        -0.0038013458,
        -0.008529663,
        -0.009140015,
        -0.014846802,
        -0.01977539,
        0.021820068,
        0.0075912476,
        0.028564453,
        -0.0018453598,
        0.016693115,
        -0.011108398,
        0.018035889,
        0.0058898926,
        -0.0038032532,
        0.033233643,
        -0.019302368,
        0.015640259,
        0.0075035095,
        0.02835083,
        -0.011428833,
        0.035003662,
        0.022827148,
        -0.0067253113,
        -0.033172607,
        0.0027008057,
        0.012268066,
        -0.025238037,
        0.022735596,
        0.03201294,
        -0.007987976,
        -0.018463135,
        -0.0053977966,
        0.0023822784,
        0.014633179,
        0.0055503845,
        0.0013170242,
        -0.0058898926,
        -0.02684021,
        0.009094238,
        -0.019363403,
        0.0029735565,
        -0.024780273,
        -0.012329102,
        0.017852783,
        -0.0043678284,
        -0.0024547577,
        -0.013282776,
        -0.009239197,
        -0.004005432,
        -0.0104904175).stream().map(item -> item.floatValue()).toList();

  }
}

@Data
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonNaming(SnakeCaseStrategy.class)
class SearchData {

  private Long atlasId;
  private String msg;

  private List<String> segWords;
}

@Data
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonNaming(SnakeCaseStrategy.class)
class ClipSearchData {

  private Long id;
  private String path;
  private List<String> segWords;
}